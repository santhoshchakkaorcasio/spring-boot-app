  steps:
  # Step 1 Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/santhosh202310/spring-boot-app-image:latest', '.']
  # Step 2 Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/santhosh202310/spring-boot-app-image:latest']
  # Step 3 Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
    - 'run'
    - 'deploy'
    - 'spring-boot-app-image'
    - '--image'
    - 'gcr.io/santhosh202310/spring-boot-app-image:latest'
    - '--region'
    - 'us-central1'
    - '--allow-unauthenticated'

  # Step 4 Pull the Image from GCR
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Pull Image from GCR'
    args: ['pull', 'gcr.io/santhosh202310/spring-boot-app-image:latest']
   
  # Step 5 Log in to JFrog Artifactory
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'sh'
    args: ['-c', 'echo "$$ARTIFACTORY_PASSWORD" | docker login --username $$ARTIFACTORY_USERNAME --password-stdin chsanthoshsep.jfrog.io/artifactory/api/gradle/hello-world-gradle']
    secretEnv: ['ARTIFACTORY_USERNAME', 'ARTIFACTORY_PASSWORD']

  # Step 6 Push the image to JFrog Artifactory
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'chsanthoshsep.jfrog.io/artifactory/api/gradle/hello-world-gradle/spring-boot-app-image:latest']

  secrets:
  - kmsKeyName: projects/santhosh202310/locations/global/keyRings/key-ring-name/cryptoKeys/key-name
    secretEnv:
      ARTIFACTORY_USERNAME: 'CiQAUBRIENDSPVTfWXeDFwHYEnl81B23tM8KJzHCZZ7fW0b7ANoSNQCJprmFA/8jw/8Mww2D8H3L6FFt7zNbYc8AxWbhpZ4Ys11p6rXpQURhrt6etGSE4kIfhZdr'
      ARTIFACTORY_PASSWORD: 'CiQAUBRIENNwluQqMT9hsBBKa9U01YJ1A8DEYfbZMSDlAu9yewASOQCJprmFerZj56oGSIvs5GbiGGMXOLU+mUJbzNAQsmU0ADaHfW/n0qgFi42UDLMSIAf2SgDiuKgbYw=='
  
  images:
  - 'gcr.io/santhosh202310/spring-boot-app-image:latest'

