  steps:
  # Step 1 Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/santhosh202310/spring-boot-app-image:latest', '.']
  # Step 2 Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/santhosh202310/spring-boot-app-image:latest']
  # Step 3 Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
    - 'run'
    - 'deploy'
    - 'spring-boot-app-image'
    - '--image'
    - 'gcr.io/santhosh202310/spring-boot-app-image:latest'
    - '--region'
    - 'us-central1'
    - '--allow-unauthenticated'

  # Step 4 Pull the Image from GCR
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Pull Image from GCR'
    args: ['pull', 'gcr.io/santhosh202310/spring-boot-app-image:latest']
   
  # Step 5 Log in to JFrog Artifactory
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'sh'
    args: ['-c', 'echo "$$ARTIFACTORY_PASSWORD" | docker login --username $$ARTIFACTORY_USERNAME --password-stdin $$_ARTIFACTORY_REPO_URL']
    secretEnv: ['ARTIFACTORY_USERNAME', 'ARTIFACTORY_PASSWORD']

  # Step 6 Push the image to JFrog Artifactory
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_ARTIFACTORY_REPO_URL}/spring-boot-app-image:latest']

  substitutions:
    _GCP_PROJECT_ID: 'santhosh202310'
    _IMAGE_NAME: 'spring-boot-app-image'
    _ARTIFACTORY_USER: 'santhosh'
    _ARTIFACTORY_PASSWORD: 'santhu1234A1'
    _TAG: 'latest'
    _ARTIFACTORY_REPO_URL: 'chsanthoshsep.jfrog.io/artifactory/api/gradle/hello-world-gradle'
  # secrets
  secrets:
  - kmsKeyName: projects/santhosh202310/locations/global/keyRings/jfrog-key-ring
    secretEnv:
      ARTIFACTORY_USERNAME: 'c2FudGhvc2g='
      ARTIFACTORY_PASSWORD: 'c2FudGh1MTIzNEEx'

  images:
  - 'gcr.io/santhosh202310/spring-boot-app-image:latest'

