  steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/${_GCP_PROJECT_ID}/${_IMAGE_NAME}:${_TAG}', '.']
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${_GCP_PROJECT_ID}/${_IMAGE_NAME}:${_TAG}']
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
    - 'run'
    - 'deploy'
    - '${_IMAGE_NAME}'
    - '--image'
    - 'gcr.io/${_GCP_PROJECT_ID}/${_IMAGE_NAME}:${_TAG}'
    - '--region'
    - 'us-central1'
    - '--allow-unauthenticated'

  # Pull the Image from GCR
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Pull Image from GCR'
    args: ['pull', 'gcr.io/${_GCP_PROJECT_ID}/${_IMAGE_NAME}:${_TAG}']
   
  # Tag the Image for Artifactory
  - name: 'gcr.io/cloud-builders/docker'
    id: Tag Image for Artifactory
    args: ['tag', 'gcr.io/${_GCP_PROJECT_ID}/${_IMAGE_NAME}:${_TAG}', '${_ARTIFACTORY_REPO_URL}/${_IMAGE_NAME}:${_TAG}']
  
  # Push the Image to JFrog Artifactory
  - name: 'gcr.io/cloud-builders/docker'
    id: Push Image to Artifactory
    args: ['push', '${_ARTIFACTORY_REPO_URL}/${_IMAGE_NAME}:${_TAG}']
    secretEnv: ['ARTIFACTORY_USERNAME', 'ARTIFACTORY_PASSWORD']
  
  # Secrets to securely pass Artifactory credentials
  secrets:
   - kmsKeyName: 'projects/santhosh202310/locations/global/keyRings/jfrog-key-ring-name/cryptoKeys/jfrog-key-name'
     secretEnv:
      ARTIFACTORY_USERNAME: 'c2FudGhvc2g='
      ARTIFACTORY_PASSWORD: 'c2FudGh1MTIzNEExIQ=='
  
   # variables
  substitutions:
    _GCP_PROJECT_ID: 'santhosh202310'
    _IMAGE_NAME: 'spring-boot-app-image'
    _TAG: 'latest'
    _ARTIFACTORY_REPO_URL: 'chsanthoshsep.jfrog.io/artifactory/api/gradle/hello-world-gradle'
 
  images:
  - 'gcr.io/${_GCP_PROJECT_ID}/${_IMAGE_NAME}:${_TAG}'

